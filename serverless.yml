service: dynamodb-ondemand-test

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action: lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
    - Effect: Allow
      Action: dynamodb:BatchWriteItem
      Resource: "*"

functions:
  generate-linear-load:
    handler: functions/generate-linear-load.handler
    timeout: 900

stepFunctions:
  stateMachines:
    # needs a payload like this
    # {
    #   "tableName": "my-table-name",
    #   "recursionLeft": 1, <- 15 mins, if you ned to run for longer, up this
    #   "peak": 10000,    <- this is the peak per function, total peak = this x 10
    #   "trough": 1,
    #   "rampUpAt": 1,    <- ramp up at 1 min mark
    #   "peakAt": 2,      <- reach peak at 2 min mark
    #   "rampDownAt": 10, <- stay at peak, and then ramp down at 10 min mark
    #   "holdingAt": 13   <- finish ramp down and hold at trough at 13 min mark
    # }
    linearTest:
      name: dynamodb-ondemand-linear-test
      definition:
        StartAt: StartTests
        States:
          StartTests:
            Type: Parallel
            Branches:              
              - StartAt: GenerateLoad1
                States:
                  GenerateLoad1:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad2
                States:
                  GenerateLoad2:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad3
                States:
                  GenerateLoad3:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad4
                States:
                  GenerateLoad4:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad5
                States:
                  GenerateLoad5:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad6
                States:
                  GenerateLoad6:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad7
                States:
                  GenerateLoad7:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad8
                States:
                  GenerateLoad8:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad9
                States:
                  GenerateLoad9:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
              - StartAt: GenerateLoad10
                States:
                  GenerateLoad10:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-generate-linear-load
                    End: true
            End: true